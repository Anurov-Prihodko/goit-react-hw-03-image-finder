{"version":3,"sources":["components/Searchbar/Searchbar.module.css","components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/ImageGallery/ImageGallery.module.css","components/Searchbar/Searchbar.js","components/Modal/Modal.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","services/api.js","App.js","index.js"],"names":["module","exports","Searchbar","state","requestName","handleNameChange","event","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","toast","error","props","onSubmit","className","s","searchbar","form","this","type","button","label","style","marginRight","input","autoComplete","autoFocus","placeholder","onChange","Component","modalRoot","document","getElementById","Modal","handleKeyDown","e","code","onClose","handleBackdropClick","target","window","addEventListener","removeEventListener","createPortal","backdrop","onClick","content","children","ImageGalleryItem","imgIdx","showModal","toggleModal","index","images","map","webformatURL","tags","id","item","handleClick","src","alt","image","largeImageURL","ImageGallery","gallery","BASE_URL","API_KEY","App","loading","handleFormSubmit","prevProps","prevState","numPage","fetch","then","response","ok","json","Promise","reject","Error","fetchImages","hits","finally","autoClose","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.05fb00cc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchbar\":\"Searchbar_searchbar__4Zx6s\",\"form\":\"Searchbar_form__1c9wN\",\"button\":\"Searchbar_button__2wf8h\",\"label\":\"Searchbar_label__16A63\",\"input\":\"Searchbar_input__2ab8B\",\"SearchForm-input\":\"Searchbar_SearchForm-input__lTGLk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ImageGalleryItem_item__2iu7i\",\"image\":\"ImageGalleryItem_image__1CUeC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__3C44a\",\"content\":\"Modal_content__1kED0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gallery\":\"ImageGallery_gallery__1NuaF\"};","import { Component } from 'react';\nimport { ImSearch } from 'react-icons/im';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport s from './Searchbar.module.css';\n\nexport default class Searchbar extends Component {\n  state = {\n    requestName: '',\n  };\n\n  handleNameChange = event => {\n    this.setState({\n      requestName: event.currentTarget.value.toLowerCase(),\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    if (this.state.requestName.trim() === '') {\n      return toast.error('Please enter a correct name!');\n    }\n\n    this.props.onSubmit(this.state.requestName);\n    this.setState({ requestName: '' });\n  };\n\n  render() {\n    return (\n      <header className={s.searchbar}>\n        <form className={s.form} onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className={s.button}>\n            <span className={s.label}>\n              <ImSearch style={{ marginRight: 8 }} />\n              Search\n            </span>\n          </button>\n\n          <input\n            className={s.input}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            value={this.state.requestName}\n            onChange={this.handleNameChange}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport s from './Modal.module.css';\n\nconst modalRoot = document.getElementById('modal-root');\n\nexport default class Modal extends Component {\n  static propTypes = {\n    onClose: PropTypes.func.isRequired,\n  };\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n\n  handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    return createPortal(\n      <div className={s.backdrop} onClick={this.handleBackdropClick}>\n        <div className={s.content}>{this.props.children}</div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ImageGalleryItem.module.css';\nimport Modal from '../Modal';\n\nexport default class ImageGalleryItem extends Component {\n  state = {\n    imgIdx: null,\n    showModal: false,\n  };\n\n  handleClick(index) {\n    this.setState({ imgIdx: index, showModal: true });\n  }\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n  };\n\n  render() {\n    const { images } = this.props;\n    const { imgIdx, showModal } = this.state;\n\n    return (\n      <>\n        {images.map(({ webformatURL, tags, id }, index) => (\n          <li\n            key={id}\n            className={s.item}\n            onClick={() => this.handleClick(index)}\n          >\n            <img src={webformatURL} alt={tags} className={s.image} />\n          </li>\n        ))}\n        {showModal && (\n          <Modal onClose={this.toggleModal}>\n            <img src={images[imgIdx].largeImageURL} alt={images[imgIdx].tags} />\n          </Modal>\n        )}\n      </>\n    );\n  }\n}\n\nImageGalleryItem.propTypes = {\n  images: PropTypes.array.isRequired,\n  key: PropTypes.number,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ImageGalleryItem from '../ImageGalleryItem';\n\nimport s from './ImageGallery.module.css';\n\nexport default class ImageGallery extends Component {\n  state = {\n    images: null,\n  };\n\n  static propTypes = {\n    images: PropTypes.arrayOf(PropTypes.object),\n  };\n\n  render() {\n    const { images } = this.props;\n\n    return (\n      <>\n        <ul className={s.gallery}>\n          {images && <ImageGalleryItem key={images.id} images={images} />}\n        </ul>\n      </>\n    );\n  }\n}\n","const BASE_URL = 'https://pixabay.com/api/';\nconst API_KEY = '22328016-b5b8589f64a6d5a0340d8aa33';\nconst NUMBER_OF_PHOTOS = 12;\n\nfunction fetchImages(requestName, numPage = 1) {\n  return fetch(\n    `${BASE_URL}?image_type=photo&orientation=horizontal&q=${requestName}&page=${numPage}&per_page=${NUMBER_OF_PHOTOS}&key=${API_KEY}`,\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(\n      new Error(`No images are available on request: ${requestName}`),\n    );\n  });\n}\n\nexport { fetchImages, NUMBER_OF_PHOTOS };\n","import { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\n// import shortid from 'shortid';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport { fetchImages, NUMBER_OF_PHOTOS } from './services/api';\n\n// import { fetchImages, NUMBER_OF_PHOTOS } from './services/api';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nclass App extends Component {\n  state = {\n    requestName: '',\n    // imgArray: [],\n    // numPage: 1,\n    loading: false,\n    // image: null,\n    // // error: false,\n    // status: Status.IDLE,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const { requestName } = this.state;\n\n    if (prevState.requestName !== requestName) {\n      // console.log('Изменилось имя покемона');\n      // console.log('prevProps:', prevState.requestName);\n      // console.log('this.props.requestName:', this.state.requestName);\n      this.setState({ loading: true });\n      fetchImages(requestName)\n        .then(response => response.hits)\n        .then(images => this.setState({ images }))\n        .finally(() => this.setState({ loading: false }));\n    }\n  }\n\n  handleFormSubmit = requestName => {\n    this.setState({ requestName });\n    // this.setState({ loading: true });\n    // fetchImages(requestName)\n    //   .then(response => response.hits)\n    //   .then(image => this.setState({ image }))\n    //   .finally(() => this.setState({ loading: false }));\n  };\n\n  render() {\n    const { loading, images, requestName } = this.state;\n\n    return (\n      <>\n        <Searchbar onSubmit={this.handleFormSubmit} />\n        {/* <ImageGallery images={this.state.image} /> */}\n        {loading && <h2>Loading...</h2>}\n        {/* {images &&\n          images.map(({ webformatURL, tags, id }) => (\n            <img key={id} src={webformatURL} width=\"300\" alt={tags} />\n          ))} */}\n\n        <ImageGallery images={images} />\n        {!requestName && <h2>Enter your request</h2>}\n        {/* <PokemonForm onSubmit={this.handleFormSubmit} />\n        <PokemonInfo pokemonName={this.state.pokemonName} /> */}\n        <ToastContainer autoClose={3500} />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// ========================================\n// // import { string } from 'prop-types';\n"],"sourceRoot":""}